How much time?
0-2hr (Basic assignment):
	- a wireframe mockup like the example
	- basic css styles
	- the minimum stateful React components neccesary (each instrument's cell grid)
	- the timeline to read the pattern and animate the cells 
2-2.5hr (css upgrade):
	- mostly for aesthetics
2.5-4hr (sound and patterns):  
	- I knew the lack of a proper audio buffer would be an issue, but after reading a bit of tone.js documentation, I knew I would be blowing way past the 4hr mark if I wanted to do it the 'right' way.  I used the time instead to implement a naive version that outputs the beat, although you could never dance to it.

What were the hard parts?
	Deciding on a data structure for the pattern.  I started with an array of 16 values for each instrument.  I migrated to a single object thinking I might name each 16th note by a timeline value similar to a daw (1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4...), but in the end I chose to keep it simple as a 0-indexed array where each entry is an object representing the state of that position on the timeline.

What were the fun parts?
	I got a little shot of dopamine when the buttons started lighting up.  Also when I could hear my beat come to life, even if a bit wobbly.  It's fun to think of all the features I could add.

Simplicity vs Flexibility
	The solution is flexible.  Adding a patternLength state to the main component should be seemless since the cells are rendered dynamically based on the pattern.  The clock is hardcoded at 16 right now, but switching that to pattern.length - 1 would fix it.
	Velocity is set via 2-step clicks (1 for full, 2 for half).  I think I got this idea from the original 808 or something like it.  This could be changed to a popup modal with a slider to set the value between 0 and 1 for more granularity.
	The pattern can be changed in real time!

Is the code tested?
	I have yet to write any tests but will do so before any update.